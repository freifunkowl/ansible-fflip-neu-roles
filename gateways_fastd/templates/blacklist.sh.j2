#!/bin/bash
# {{ ansible_managed }}

# Implementierung einer Fastd Blacklist 
# Das Script wird aus Fastd beim Aufbau einer Verbidung aufgerufen
# Die geblockten Keys werden in der Datei blacklist aufgef√ºhrt

PEER_KEY=$1
UPTIME=$(awk </proc/uptime '{printf("%.0f", $1);}')
if [ ${UPTIME} -lt 301 ]; then
  /usr/bin/logger "$0: INFO: Sleeping until 301 seconds have passed after boot. Currently passed: ${UPTIME}."
  exit 1
fi

EXITVAL=0
if [ -e /etc/fastd-limit ]; then
  MAXPEERS="$(cat /etc/fastd-limit)"
  CURPEERS="$(FASTD_SOCKET=/run/fastd-{{ item.key }}/fastd.sock /usr/local/bin/fastd-query connections)"
  if [ "X${CURPEERS}" = "X" ]; then
    /usr/bin/logger "$0: WARNING: {{ item.key }} got empty string reading connections"
    CURPEERS=0
  fi
  if [ ${CURPEERS} -ge ${MAXPEERS} ]; then
    /usr/bin/logger "$0: WARNING: {{ item.key }} refusing new fastd connection to ${PEER_KEY} (${CURPEERS} >= ${MAXPEERS})"
    EXITVAL=1
  fi
fi
if [ $EXITVAL -ne 0 ]; then
  exit $EXITVAL
fi

if /bin/grep -Fq $PEER_KEY /var/freifunk/gateway-{{ freifunk.kurzname }}/fastd/blacklist; then
      /usr/bin/logger "$0: WARNING: {{ item.key }} refusing fastd connection to ${PEER_KEY} due to blacklist"
      exit 1
fi
exit 0
